apiVersion: v1
kind: Service
metadata:
  name: sentry-postgresql
#  namespace: local
spec:
  type: ClusterIP
  ports:
  - name: postgresql-port
    port: 5432
    targetPort: postgresql-port
  selector:
    app: sentry-postgresql

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: sentry-postgresql
  name: sentry-postgresql
#  namespace: local
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: sentry-postgresql
    spec:
      containers:
      - name: sentry-postgresql
        image: "postgres:9.6"
        imagePullPolicy: IfNotPresent
        env:
        - name: POSTGRES_USER
          value: "sentry"
        - name: PGUSER
          value: "sentry"
        - name: POSTGRES_DB
          value: "sentry"
        - name: POSTGRES_INITDB_ARGS
          value: ""
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_PASSWORD
          value: "ymzndl33SNwdm"
        - name: POD_IP
          valueFrom: { fieldRef: { fieldPath: status.podIP } }
        ports:
        - name: postgresql-port
          containerPort: 5432
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - name: storage
          mountPath: /var/lib/postgresql/data/pgdata
          subPath: postgresql-db
      volumes:
      - name: storage
        emptyDir: {}